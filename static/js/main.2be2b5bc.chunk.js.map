{"version":3,"sources":["types/SelectValues.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/todosFiltering.ts","index.tsx"],"names":["SelectValues","actions","todo","type","payload","currentTodoReducer","state","action","status","query","filterReducer","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","todosAfterSearch","dispatch","activeTodo","todosForView","length","className","map","classNames","id","completed","title","onClick","setCurrentTodo","TodoFilter","filterState","onSubmit","event","preventDefault","value","onChange","setFilterStatus","target","Object","entries","key","placeholder","setFilterQuery","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoaded","setIsLoaded","email","name","phone","selectedUser","setSelectedUser","useEffect","userId","user","href","App","todosFromServer","error","setError","todosAfterSelect","useMemo","Completed","Active","trim","toLowerCase","includes","setTodos","catch","errorMessage","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2be2b5bc.chunk.js","sourcesContent":["export enum SelectValues {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setTodo, removeTodo };\nexport default currentTodoReducer;\n","type SelectFilterAction = { type: 'filter/SELECT', payload: string };\ntype SearchFilterAction = { type: 'filter/SEARCH', payload: string };\ntype SearchingFilterClearAction = { type: 'filter/CLEAR' };\n\nconst filterSelect = (status: string): SelectFilterAction => ({\n  type: 'filter/SELECT', payload: status,\n});\nconst searchingFilter = (query: string): SearchFilterAction => ({\n  type: 'filter/SEARCH', payload: query,\n});\nconst searchingFilterClear = (): SearchingFilterClearAction => ({\n  type: 'filter/CLEAR',\n});\n\ntype State = { query: string, status: string };\ntype Action =\n  SearchFilterAction |\n  SelectFilterAction |\n  SearchingFilterClearAction;\n\nconst filterReducer = (state: State = {\n  query: '', status: 'All',\n}, action: Action): State => {\n  switch (action.type) {\n    case 'filter/SELECT':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    case 'filter/SEARCH':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/CLEAR':\n      return {\n        ...state,\n        query: '',\n      };\n    default:\n      return state;\n  }\n};\n\nexport const actions = { filterSelect, searchingFilter, searchingFilterClear };\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/LOAD', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/LOAD', payload: todos,\n});\n\ntype State = Todo[];\ntype Action = SetTodosAction;\n\nconst todosReducer = (state: State = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/LOAD':\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\nexport const actions = { setTodos };\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todosAfterSearch: Todo[] | []\n};\n\nexport const TodoList: React.FC<Props> = ({ todosAfterSearch }) => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const setCurrentTodo = (todo: Todo) => dispatch(actions.setTodo(todo));\n  const activeTodo = useAppSelector(state => state.currentTodo);\n  const todosForView = todosAfterSearch.length ? todosAfterSearch : todos;\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            todosForView && (todosForView.map((todo) => (\n              <tr\n                data-cy=\"todo\"\n                className={classNames(\n                  { 'has-background-info-light': todo.id === activeTodo?.id },\n                )}\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed\n                    && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames(\n                      {\n                        'has-text-success': todo.completed,\n                        'has-text-danger': !todo.completed,\n                      },\n                    )}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setCurrentTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames('far',\n                        {\n                          'fa-eye': todo.id !== activeTodo?.id,\n                          'fa-eye-slash': todo.id === activeTodo?.id,\n                        })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            )))\n          }\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SelectValues } from '../../types/SelectValues';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const setFilterStatus = (status: string) => dispatch(actions\n    .filterSelect(status));\n  const setFilterQuery = (query: string) => dispatch(actions\n    .searchingFilter(query));\n  const clearSearch = () => dispatch((actions.searchingFilterClear()));\n  const filterState = useAppSelector(state => state.filter);\n  const { query, status } = filterState;\n  const handlerChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterStatus(event.target.value);\n  };\n\n  const handlerChangeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterQuery(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handlerChangeSelect}\n          >\n            {\n              Object.entries(SelectValues).map(([key, value]) => (\n                <option\n                  key={key}\n                  value={value}\n                >\n                  {key}\n                </option>\n              ))\n            }\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query || ''}\n          onChange={handlerChangeSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const activeTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n  const removeActiveTodo = () => dispatch(actions.removeTodo());\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User>({\n    email: '',\n    id: 0,\n    name: '',\n    phone: '',\n  });\n\n  useEffect(() => {\n    if (!activeTodo) {\n      return;\n    }\n\n    getUser(activeTodo.userId)\n      .then(user => {\n        setSelectedUser(user);\n        setIsLoaded(true);\n      });\n  }, [activeTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />)\n        : (\n          activeTodo && (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  Todo #\n                  {activeTodo.id}\n                </div>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={removeActiveTodo}\n                />\n              </header>\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {activeTodo.title}\n                </p>\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {activeTodo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n                  {' by '}\n                  <a href={`mailto: ${selectedUser.email}`}>\n                    {selectedUser.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          ))}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { actions } from './features/todos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { filteringBySearch, filteringBySelect } from './utils/todosFiltering';\n\nexport const App: React.FC = () => {\n  const todosFromServer = useAppSelector(state => state.todos);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState('');\n  const dispatch = useAppDispatch();\n  const setTodos = (todos: Todo[]) => dispatch(actions.setTodos(todos));\n  const activeTodo = useAppSelector(state => state.currentTodo);\n  const filterState = useAppSelector(state => state.filter);\n  const { query, status } = filterState;\n\n  const todosAfterSelect = useMemo(() => {\n    return filteringBySelect(todosFromServer, status);\n  }, [todosFromServer, status]);\n\n  const todosAfterSearch = useMemo(() => {\n    return filteringBySearch(todosAfterSelect, query);\n  }, [query, todosAfterSelect]);\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setTodos(todos);\n        setIsLoaded(true);\n      })\n      .catch(errorMessage => setError(`smth happens - ${errorMessage}`))\n      .finally(() => setIsLoaded(true));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded && <Loader />}\n              {(!todosAfterSearch.length && query) ? (\n                <p className=\"notification is-warning\">\n                  There are no todos matching current filter criteria\n                </p>\n              )\n                : <TodoList todosAfterSearch={todosAfterSearch} />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {error}\n      {activeTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { SelectValues } from '../types/SelectValues';\n\nexport const filteringBySelect = (todos: Todo[], value: string) => {\n  return todos.filter(todo => {\n    switch (value as SelectValues) {\n      case SelectValues.Completed:\n        return todo.completed;\n      case SelectValues.Active:\n        return !todo.completed;\n      default:\n        return true;\n    }\n  });\n};\n\nexport const filteringBySearch = (todos: Todo[], value: string) => {\n  // if (!value) {\n  //   return todos;\n  // }\n  if (!value || !value.trim().length) {\n    return todos;\n  }\n\n  return todos.filter((todo) => {\n    return todo.title.toLowerCase().includes(value.toLowerCase());\n  });\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}